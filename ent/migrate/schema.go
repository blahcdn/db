// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "email", Type: field.TypeString, Unique: true, Size: 50},
		{Name: "username", Type: field.TypeString, Unique: true, Size: 50},
		{Name: "lower_username", Type: field.TypeString, Unique: true, Size: 50},
		{Name: "password_hash", Type: field.TypeBytes, Size: 100},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:        "users",
		Columns:     UsersColumns,
		PrimaryKey:  []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// ZonesColumns holds the columns for the "zones" table.
	ZonesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "domain", Type: field.TypeString, Unique: true},
		{Name: "user_zones", Type: field.TypeInt, Nullable: true},
	}
	// ZonesTable holds the schema information for the "zones" table.
	ZonesTable = &schema.Table{
		Name:       "zones",
		Columns:    ZonesColumns,
		PrimaryKey: []*schema.Column{ZonesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "zones_users_zones",
				Columns:    []*schema.Column{ZonesColumns[2]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		UsersTable,
		ZonesTable,
	}
)

func init() {
	ZonesTable.ForeignKeys[0].RefTable = UsersTable
}
